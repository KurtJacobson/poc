.. Python OCE Composer (poc) documentation master file, created by
   sphinx-quickstart on Sat Aug  5 21:47:32 2017.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

Welcome to Python OCE Composer (poc)'s documentation!
=====================================================

Contents:

.. toctree::
   :maxdepth: 2

Program: poc
------------
Usage: **poc** *input.poc* *optional-args...*

Execute *input.poc* and write an STL model to *input.stl*.

Program: pocview
----------------

Usage: **pocview** *input.poc* *optional-args...*

Execute *input.poc* and show the result onscreen.  When *input.poc* is
modified, **pocview** updates the preview.

poc environment
---------------

The poc environment is just a Python (2.x) interpreter with some extras
preloaded::

 from __future__ import division
 from math import *
 from geotools import *
 from occmodel import *
 from poctools import *

poctools module
---------------

.. automodule:: poctools

Primitives
~~~~~~~~~~
Each primitive is added to the currently active group operation.
At the outermost level, the active group operation is union().

.. autofunction:: Box
.. autofunction:: Cylinder

Postfix operations
~~~~~~~~~~~~~~~~~~
A postfix operation modifies the currently active group operation
in a way other than adding another primitive to it.

.. autofunction:: Fillet

Group operations
~~~~~~~~~~~~~~~~
A group operation is introduced by the `with` statement, such as
`with Intersection():`.  At the conclusion of the `with` statement,
its whole contents are treated as a primitive in the outer operation.

.. autofunction:: Intersection
.. autofunction:: Difference
.. autofunction:: Union
.. autofunction:: Op

Inquiries
~~~~~~~~~
An inquiry returns information about the currently active group operation.
These inquiries can be used to make decisions, or may also be useful
to pass to postfix operations (e.g., to `Fillet`'s `edges=` parameter)

.. autofunction:: Edges

Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`

